@model IEnumerable<ExamSchedule.Models.Exam>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a> |
    <a asp-action="BatchCreate">Bacth Create New Exams</a>
</p>
<div class="row">
    <div class="col-3">
        <button type="button" id="btnMerge" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
            Merge Selected Exams
        </button>
    </div>
    <div class="col-3">z</div>
    <div class="col-3">z</div>
</div>



<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Merge Exams</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <label for="txtNewExamName" class="control-label fw-bold   ">Exam Name</label>
                        <input type="text" class="form-control" id="txtNewExamName">
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <span id="spnAcceptMessage">Aşağıdaki sınavlar birleştirilecektir. Onaylıyor musunuz?</span>
                        <span id="spnEmptyListMessage" class="bg-danger">Birleştirmek için lütfen birden çok ders seçiniz !</span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <ul id="ulExamList">
                        </ul>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary">Merge</button>
            </div>
        </div>
    </div>
</div>




<table class="table" id="tblExam">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Schedule)</th>
            <th>
                Programme
            </th>
            <th>
                @Html.DisplayNameFor(model =>model.Course)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPined)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsMerged)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End)
            </th>
            <th>Select</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() > 0)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Schedule.Title)</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.CourseProgrammeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @{
                            if (item.IsPined == true)
                            {
                                <i class="bi bi-check"></i>
                            }
                            else
                            {
                                <i class="bi bi-x"></i>
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (item.IsMerged == 1)
                            {
                                <i class="bi bi-check"></i>
                            }
                            else
                            {
                                <i class="bi bi-x"></i>
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Start)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.End)
                    </td>
                    <td>
                        <div>
                            <input type="checkbox" class="form-check-input form-control-lg" value="@item.Id" name="chkExam" id="chkExam-@item.Id" data-exam-id="@item.Id" data-exam-course-name="@item.Course.Name" data-exam-course-programme-name="@item.Course.CourseProgrammeName">
                        </div>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="1000" class="text-center">No record founded</td>
            </tr>
        }
    </tbody>
</table>


@section Scripts{
    <script>
        $(document).ready(function () {
            $("#tblExam").DataTable();


            $("[name=chkExam]").on("change", function () {
                var chk = $(this);
                if (chk.is(":checked")) {
                    chk.closest("tr").css("background-color", "lime");
                } else {
                    chk.closest("tr").css("background-color", "white");

                }

                var id = $(this).attr("id");
                var examId = $(this).data("exam-id");
                //console.log(`${id} - ${examId}`);
            })

            $("#btnMerge").on("click", function () {

                var modalExamList = $("#ulExamList");
                modalExamList.html("");
                $("[name=chkExam]").each(function () {
                    var chk = $(this)
                    if (chk.is(":checked")) {
                        var li = $("<li></li>");
                        li.text(chk.data("exam-course-programme-name") + " - " + chk.data("exam-course-name"));
                        modalExamList.append(li);
                    }
                });
                $("#spnAcceptMessage").toggle(modalExamList.children("li").length > 1);
                $("#spnEmptyListMessage").toggle(modalExamList.children("li").length < 2);

            });


            $("#tblExam tr").on("click", function () {
                var tr = $(this);
                var chk = tr.find("[name=chkExam]");
                if (tr.attr("selected")) {
                    tr.css("background-color", "white");
                    tr.removeAttr("selected");
                    chk.attr("checked", false);
                } else {
                    tr.css("background-color", "lime");
                    tr.attr("selected", true);
                    chk.attr("checked", true);
                }
            });

        })
    </script>


}