
@model IEnumerable<ExamSchedule.Models.ImportedData>

@{
	ViewData["Title"] = "Index";

}

@{
	Dictionary<string, string> names = new Dictionary<string, string>();
	if (ViewData["Error"] != null)
	{
		names.Add("Error", "alert-danger");

	}

	if (ViewData["ErrorMessage"] != null)
	{
		names.Add("ErrorMessage", "alert-danger");
	}

	if (ViewData["Message"] != null)
	{
		names.Add("Message", "alert-success");
	}
	foreach (var item in names)
	{
		<div role="alert" class="alert @item.Value" >
			@ViewData[item.Key].ToString()
		</div>
	}

}


<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<p>

</p>



<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Date)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.MIMEType)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Size)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Date)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.MIMEType)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Size)
				</td>
				<td>
					<a asp-action="Use" asp-route-id="@item.Id">Use</a> |
					<a asp-action="Download" asp-route-id="@item.Id">Download</a> |
					<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
					<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
